{"version":3,"file":"static/css/main.512f57bf.css","mappings":"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","sources":["index.scss","scss/constants.scss","App.scss","components/AboutMePage/aboutMePage.scss","components/ContactPage/contactPage.scss","components/LandingPage/Navigation/navigation.scss","components/LandingPage/PortraitWithText/portraitWithText.scss","scss/config.scss","components/LandingPage/landingPage.scss","components/ProjectPage/projectPage.scss","components/ProjectPanelPage/ProjectPanel/projectPanel.scss","components/ProjectPanelPage/projectPanelPage.scss","components/SkillPage/SkillBar/skillBar.scss","components/SkillPage/skillPage.scss"],"sourcesContent":["@import './scss/constants.scss';\n\nbody {\n  margin: 0;\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\n    sans-serif;\n  -webkit-font-smoothing: antialiased;\n  -moz-osx-font-smoothing: grayscale;\n  background: $primaryBackgroundColor;\n}\n\ncode {\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\n    monospace;\n}\n","\r\n\r\n//Margins\r\n$marginTiny:10px;\r\n$marginSmall: 20px;\r\n$marginMedium: 40px;\r\n$marginLarge: 60px;\r\n//Padding\r\n$paddingSmall:20px;\r\n$paddingMedium:40px;\r\n$paddingLarge:60px;\r\n//Font Sizes\r\n$navigationFontSize:12px;\r\n$skillNameFontSize:20px;\r\n$projectPanelNameFontSize:20px;\r\n$personalNameFontSize:87px;\r\n$personalNameWebFirstFontSize:52px;\r\n$personalNameWebSecondFontSize:74px;\r\n$projectPanelPageHeader:64px;\r\n$projectPanelDateFontSize:16px;\r\n$aboutMePageHeader:64px;\r\n//Widths\r\n$burgerMenuIconWidth: 32px;\r\n$projectPanelWidth:269px;\r\n$aboutMePageContentWidth:241px;\r\n//Heights+\r\n$projectPanelHeight:130px;\r\n//Colors\r\n$primaryBlue:#8CC2FF;\r\n$primaryBackgroundColor: #F5F4FF;\r\n$personalNameFontColor: #2E3141;\r\n$personalNameWebFontColor:#384964;\r\n$skillPageFont:#F4F3FF;\r\n$contactPageElementColor: #B7D7FB;\r\n//LineHeight\r\n$portraitWithTextLineHeight:70px;\r\n$portraitWithTextWebLineHeight:40px;\r\n",".appContainer{\r\n    display:flex;\r\n    flex-direction: column;\r\n}\r\n\r\n#worksection{\r\n    display: block;\r\n    position: relative;\r\n    top: -150px;\r\n    visibility: hidden;\r\n}\r\n\r\n#aboutmesection{\r\n    display: block;\r\n    position: relative;\r\n    top: -150px;\r\n    visibility: hidden;\r\n}\r\n\r\n#contactsection{\r\n    display: block;\r\n    position: relative;\r\n    top: -100px;\r\n    visibility: hidden;\r\n}\r\n#homesection{\r\n    display: block;\r\n    position: relative;\r\n    top: -1800px;\r\n    visibility: hidden;\r\n}\r\n\r\n","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.aboutMePageHeader{\r\n    font-family:'Bebas Neue';\r\n    color:#2E3141;\r\n    font-size:$aboutMePageHeader;\r\n    margin-left:$marginMedium;\r\n    margin-bottom:$marginSmall;\r\n}\r\n\r\n.aboutMePageContent{\r\n    font-family: 'Oswald', sans-serif;\r\n    font-weight: 300;\r\n    margin-left:$marginMedium;\r\n    margin-right:$marginLarge;\r\n    width:$aboutMePageContentWidth;\r\n}\r\n\r\n#profilePictureSecond{\r\n    position:relative;\r\n    top: 4px;\r\n    left:0px;\r\n    width:400px;\r\n}\r\n\r\n@include media('>=tablet'){\r\n   .aboutMePageContent{\r\n    width:$aboutMePageContentWidth * 2.7;\r\n   }\r\n   .aboutMePageContentAndPictureContainer{\r\n    display:flex;\r\n    flex-direction: row;\r\n}\r\n   #profilePictureSecond{\r\n    left:-6%;\r\n    top:-0px;\r\n    margin:0;\r\n    padding:0;\r\n   }\r\n}\r\n\r\n","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.contactPageContainer{\r\n    height:900px;\r\n    font-family:'Oswald';\r\n    margin-top:$marginLarge;\r\n}\r\n\r\n.contactPageHeader{\r\n    font-weight:200;\r\n    font-size: 30px;\r\n    margin-left:$marginLarge;\r\n    color:$personalNameFontColor;\r\n    width:70%;\r\n    margin-bottom:$marginLarge;\r\n}\r\n.contactPageInformationContainer{\r\n    width:100%;\r\n    display:flex;\r\n    flex-direction: column;\r\n    justify-items: center;\r\n    justify-content: center;\r\n    align-items: center;\r\n}\r\n.contactPageElement{\r\n    text-align: center;\r\n    margin-bottom:$marginSmall * 0.6;\r\n    border: 2px solid $contactPageElementColor;\r\n    width:240px;\r\n    border-radius: 15px;\r\n    font-weight:300;\r\n    font-size:20px;\r\n    color: $personalNameFontColor;\r\n    text-decoration: none;\r\n}\r\n\r\n@include media('>=tablet'){\r\n    .contactPageHeader{\r\n        font-size:64px;\r\n        margin-bottom:$marginLarge *2;\r\n    }\r\n    .contactPageContainer{\r\n        margin-top:$marginLarge *2;\r\n    }\r\n    .contactPageElement{\r\n        font-size:43px;\r\n        width:60%;\r\n        margin-bottom:$marginSmall *2;\r\n    }\r\n    .contactPageImage{\r\n        width:40px !important;\r\n    }\r\n}\r\n#emailPicture{\r\n    position: relative;\r\n    top:3px;\r\n}\r\n.contactPageImage{\r\n    width:20px;\r\n    margin-right:$marginSmall *0.4;\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.navigationContainer{\r\n    display:flex;\r\n    justify-content:space-between;\r\n    margin-right:$marginLarge *2;\r\n    font-family: Oswald;\r\n    color:$personalNameFontColor;\r\n    position:fixed;\r\n    z-index:100;\r\n    width:100%;\r\n    height:120px;\r\n    background-color:$primaryBackgroundColor;\r\n    align-items:center;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n}\r\n#burger-icon{\r\n    width: $burgerMenuIconWidth;\r\n}\r\n.leftNavSide{\r\n    display:flex;\r\n    flex-direction: column;\r\n    font-size:$navigationFontSize;\r\n    margin-left:$marginMedium;\r\n}\r\n.navigation{\r\n    display:none;\r\n}\r\n.burgerIconContainer{\r\n    cursor:pointer;\r\n    user-select: none;\r\n    margin-right: $marginMedium;\r\n}\r\n@include media('>=tablet'){\r\n    .burgerIconContainer{\r\n        display:none !important;\r\n    }\r\n    .mobileMenuContainer{\r\n        display:none !important;\r\n    }\r\n    .navigation{\r\n        display:flex;\r\n        width:30%;\r\n        justify-content:space-around;\r\n        \r\n    }\r\n    .navigationContainer{\r\n        margin-bottom: $marginLarge;\r\n    }\r\n}\r\n\r\n\r\n.navigationElement{\r\n    text-decoration:none;\r\n    color:$personalNameFontColor;\r\n}\r\n\r\n\r\n.burgerIconContainer.closed{\r\n    display:block;\r\n}\r\n.burgerIconContainer.open{\r\n    display:block;\r\n}\r\n\r\n.mobileMenu.open{\r\n    display:flex;\r\n    flex-direction: column;   \r\n    margin-right:$marginSmall;\r\n    margin-top:$marginMedium*1.2;\r\n    user-select: none;\r\n    width:120%;\r\n    justify-content: center;\r\n    justify-items: center;\r\n    align-items: center;\r\n    align-content:center;\r\n}\r\n\r\n.mobileMenu.closed{\r\n    display:none\r\n}\r\n.navigationElementMobile{\r\n    background-color:$primaryBackgroundColor;\r\n    box-shadow: 0px 4px 4px rgba(0, 0, 0, 0.25);\r\n    width:100%;\r\n    height:40px;\r\n    margin-bottom:$marginSmall *0.4;\r\n   text-align: center;\r\n   display:flex;\r\n   align-content: center;\r\n    align-items: center;\r\n    justify-content: center;\r\n    margin-right:$marginSmall;\r\n\r\n}\r\n.closeButton{\r\n    cursor:pointer;\r\n    font-weight:200;\r\n}\r\n\r\n.mobileMenuContainer{\r\n    display:flex;\r\n    justify-content:center;\r\n    align-items:center;\r\n    flex-direction: column;\r\n}\r\n\r\n.mobileMenuContainer.open{\r\n    margin-top:$marginLarge *4.2;\r\n}","@import '/src/scss/constants.scss';\r\n@import'/src/scss/config.scss';\r\n\r\n\r\n.portraitWithTextContainer{\r\n    font-family:'Bebas Neue';\r\n    height:580px;\r\n}\r\n.personalNameContainer{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center; \r\n    width:80%;\r\n    font-size: $personalNameFontSize;\r\n    color: $personalNameFontColor;\r\n    span{\r\n        line-height: $portraitWithTextLineHeight;\r\n        text-align: left;\r\n    }\r\n    .personalNameFirst{\r\n        margin-right:$marginSmall;\r\n    }\r\n}\r\n.personalNameWebContainer{\r\n    color:$personalNameWebFontColor;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    margin-right: $marginSmall;\r\n    margin-top:$marginSmall;\r\n    span{\r\n        line-height: $portraitWithTextLineHeight;\r\n    }\r\n    .personalNameWebFirst{\r\n        font-size:$personalNameWebFirstFontSize;\r\n        text-align:left;\r\n        line-height:$portraitWithTextWebLineHeight;\r\n    }\r\n    .personalNameWebSecond{\r\n        text-align:left;\r\n        font-size:$personalNameWebSecondFontSize;\r\n    }\r\n}\r\n\r\n#profilePictureOne{\r\n    position:relative;\r\n    top:-90px;\r\n    width:370px;\r\n}\r\n@include media('<=tablet'){\r\n    .portraitWithTextInfoContainer{\r\n       display:flex;\r\n       align-items:center;\r\n       flex-direction:column;\r\n    }\r\n    .personalNameContainer{\r\n        margin-right:$marginSmall *0.2;\r\n    }\r\n}\r\n\r\n@include media('>=tablet','<=desktop'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *1.4;\r\n    }\r\n    #profilePictureOne{\r\n        top:-336px;\r\n    }\r\n\r\n}\r\n@include media('>=tablet'){\r\n    #profilePictureOne{\r\n        width:510px;\r\n    }\r\n    .personalNameContainer{\r\n        flex-direction:row;\r\n        font-size:$personalNameFontSize *1.2;\r\n    }\r\n    .personalNameWebFirst{\r\n        font-size:$personalNameWebFirstFontSize * 1.8 !important;\r\n    }\r\n    .personalNameWebSecond{\r\n        font-size:$personalNameWebSecondFontSize * 1.8 !important;\r\n    }\r\n    .personalNameWebContainer{\r\n        float:right;\r\n        margin-right:$marginLarge;\r\n        margin-top:$marginMedium;\r\n        span{\r\n            line-height:$portraitWithTextWebLineHeight*3.8;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@include media('>=desktop', '<=desktopLarge'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *2.4;\r\n    }\r\n    #profilePictureOne{\r\n        position:absolute;\r\n        top:124px;\r\n    }\r\n\r\n    .personalNameWebContainer{\r\n        position:relative;\r\n        left:-22%;\r\n    }\r\n}\r\n@include media('>=desktopLarge', '<=desktopUltra'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *2.4;\r\n    }\r\n    #profilePictureOne{\r\n        position:absolute;\r\n        top:120px;\r\n    }\r\n\r\n    .personalNameWebContainer{\r\n        position:relative;\r\n        left:-40%;\r\n    }\r\n}\r\n@include media('>=desktopUltra'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *2.4;\r\n        font-size:$personalNameFontSize * 1.4;\r\n    }\r\n    #profilePictureOne{\r\n        position:absolute;\r\n        top:120px;\r\n    }\r\n\r\n    .personalNameWebContainer{\r\n        position:relative;\r\n        left:-50%;\r\n        margin-top:$marginLarge *1.0 !important ;\r\n        span{\r\n            line-height:$portraitWithTextWebLineHeight*4.3;\r\n        }\r\n    }\r\n    .personalNameWebFirst{\r\n        font-size:$personalNameWebFirstFontSize * 2.2 !important;\r\n    }\r\n    .personalNameWebSecond{\r\n        font-size:$personalNameWebSecondFontSize * 2.2 !important;\r\n    }\r\n    \r\n}\r\n","@charset \"UTF-8\";\r\n\r\n//     _            _           _                           _ _\r\n//    (_)          | |         | |                         | (_)\r\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\r\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\r\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\r\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\r\n//\r\n//      Simple, elegant and maintainable media queries in Sass\r\n//                        v1.4.9\r\n//\r\n//        https://eduardoboucas.github.io/include-media\r\n//\r\n//         Authors: Eduardo Boucas (@eduardoboucas)\r\n//                  Kitty Giraudel (@kittygiraudel)\r\n//\r\n//      This project is licensed under the terms of the MIT license\r\n////\r\n/// include-media library public configuration\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Creates a list of global breakpoints\r\n///\r\n/// @example scss - Creates a single breakpoint with the label `phone`\r\n///  $breakpoints: ('phone': 320px);\r\n///\r\n$breakpoints: (\r\n  'phone': 320px,\r\n  'tablet': 768px,\r\n  'desktop': 1024px,\r\n  'desktopLarge': 1440px,\r\n  'desktopUltra':1920px\r\n) !default;\r\n\r\n\r\n///\r\n/// Creates a list of static expressions or media types\r\n///\r\n/// @example scss - Creates a single media type (screen)\r\n///  $media-expressions: ('screen': 'screen');\r\n///\r\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\r\n///  $media-expressions: (\r\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\r\n///  );\r\n///\r\n$media-expressions: (\r\n  'screen': 'screen',\r\n  'print': 'print',\r\n  'handheld': 'handheld',\r\n  'landscape': '(orientation: landscape)',\r\n  'portrait': '(orientation: portrait)',\r\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\r\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\r\n) !default;\r\n\r\n\r\n///\r\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\r\n///\r\n/// @example scss - Interval for pixels is defined as `1` by default\r\n///  @include media('>128px') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 129px) {}\r\n///\r\n/// @example scss - Interval for ems is defined as `0.01` by default\r\n///  @include media('>20em') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 20.01em) {}\r\n///\r\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\r\n///  @include media('>2.0rem') {}\r\n///\r\n///  /* Generates: */\r\n///  @media (min-width: 2.1rem) {}\r\n///\r\n$unit-intervals: (\r\n  'px': 1,\r\n  'em': 0.01,\r\n  'rem': 0.1,\r\n  '': 0\r\n) !default;\r\n\r\n///\r\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\r\n/// for browsers that don't support media queries.\r\n///\r\n/// @example scss - Disables support for media queries\r\n///  $im-media-support: false;\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n$im-media-support: true !default;\r\n\r\n///\r\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\r\n/// intercept the breakpoint will be displayed, any others will be ignored.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  @include media('>=tablet') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* Generates: */\r\n///  .foo {\r\n///    color: tomato;\r\n///  }\r\n///\r\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'tablet';\r\n///  @include media('>=desktop') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-breakpoint: 'desktop' !default;\r\n\r\n///\r\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\r\n/// are not supported.\r\n///\r\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'screen') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///   /* Generates: */\r\n///   .foo {\r\n///     color: tomato;\r\n///   }\r\n///\r\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\r\n///  $im-media-support: false;\r\n///  $im-no-media-breakpoint: 'desktop';\r\n///  $im-no-media-expressions: ('screen');\r\n///  @include media('>=tablet', 'retina2x') {\r\n///    .foo {\r\n///      color: tomato;\r\n///    }\r\n///  }\r\n///\r\n///  /* No output */\r\n///\r\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\r\n\r\n////\r\n/// Cross-engine logging engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Log a message either with `@error` if supported\r\n/// else with `@warn`, using `feature-exists('at-error')`\r\n/// to detect support.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@function im-log($message) {\r\n  @if feature-exists('at-error') {\r\n    @error $message;\r\n  } @else {\r\n    @warn $message;\r\n    $_: noop();\r\n  }\r\n\r\n  @return $message;\r\n}\r\n\r\n\r\n///\r\n/// Wrapper mixin for the log function so it can be used with a more friendly\r\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\r\n/// within functions because it is not possible to include a mixin in a function\r\n/// and use the mixin everywhere else because it's much more elegant.\r\n///\r\n/// @param {String} $message - Message to log\r\n///\r\n@mixin log($message) {\r\n  @if im-log($message) {}\r\n}\r\n\r\n\r\n///\r\n/// Function with no `@return` called next to `@warn` in Sass 3.3\r\n/// to trigger a compiling error and stop the process.\r\n///\r\n@function noop() {}\r\n\r\n///\r\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\r\n///\r\n@function im-intercepts-static-breakpoint($conditions...) {\r\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\r\n\r\n  @if not $no-media-breakpoint-value {\r\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\r\n  }\r\n\r\n  @each $condition in $conditions {\r\n    @if not map-has-key($media-expressions, $condition) {\r\n      $operator: get-expression-operator($condition);\r\n      $prefix: get-expression-prefix($operator);\r\n      $value: get-expression-value($condition, $operator);\r\n\r\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\r\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\r\n        @return false;\r\n      }\r\n    } @else if not index($im-no-media-expressions, $condition) {\r\n      @return false;\r\n    }\r\n  }\r\n\r\n  @return true;\r\n}\r\n\r\n////\r\n/// Parsing engine\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Get operator of an expression\r\n///\r\n/// @param {String} $expression - Expression to extract operator from\r\n///\r\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\r\n///\r\n@function get-expression-operator($expression) {\r\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\r\n    @if str-index($expression, $operator) {\r\n      @return $operator;\r\n    }\r\n  }\r\n\r\n  // It is not possible to include a mixin inside a function, so we have to\r\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n  // functions cannot be called anywhere in Sass, we need to hack the call in\r\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n  $_: im-log('No operator found in `#{$expression}`.');\r\n}\r\n\r\n\r\n///\r\n/// Get dimension of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract dimension from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {String} - `width` or `height` (or potentially anything else)\r\n///\r\n@function get-expression-dimension($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\r\n  $dimension: 'width';\r\n\r\n  @if str-length($parsed-dimension) > 0 {\r\n    $dimension: $parsed-dimension;\r\n  }\r\n\r\n  @return $dimension;\r\n}\r\n\r\n\r\n///\r\n/// Get dimension prefix based on an operator\r\n///\r\n/// @param {String} $operator - Operator\r\n///\r\n/// @return {String} - `min` or `max`\r\n///\r\n@function get-expression-prefix($operator) {\r\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\r\n}\r\n\r\n\r\n///\r\n/// Get value of an expression, based on a found operator\r\n///\r\n/// @param {String} $expression - Expression to extract value from\r\n/// @param {String} $operator - Operator from `$expression`\r\n///\r\n/// @return {Number} - A numeric value\r\n///\r\n@function get-expression-value($expression, $operator) {\r\n  $operator-index: str-index($expression, $operator);\r\n  $value: str-slice($expression, $operator-index + str-length($operator));\r\n\r\n  @if map-has-key($breakpoints, $value) {\r\n    $value: map-get($breakpoints, $value);\r\n  } @else {\r\n    $value: to-number($value);\r\n  }\r\n\r\n  $interval: map-get($unit-intervals, unit($value));\r\n\r\n  @if not $interval {\r\n    // It is not possible to include a mixin inside a function, so we have to\r\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\r\n    // functions cannot be called anywhere in Sass, we need to hack the call in\r\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\r\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\r\n    $_: im-log('Unknown unit `#{unit($value)}`.');\r\n  }\r\n\r\n  @if $operator == '>' {\r\n    $value: $value + $interval;\r\n  } @else if $operator == '<' {\r\n    $value: $value - $interval;\r\n  }\r\n\r\n  @return $value;\r\n}\r\n\r\n\r\n///\r\n/// Parse an expression to return a valid media-query expression\r\n///\r\n/// @param {String} $expression - Expression to parse\r\n///\r\n/// @return {String} - Valid media query\r\n///\r\n@function parse-expression($expression) {\r\n  // If it is part of $media-expressions, it has no operator\r\n  // then there is no need to go any further, just return the value\r\n  @if map-has-key($media-expressions, $expression) {\r\n    @return map-get($media-expressions, $expression);\r\n  }\r\n\r\n  $operator: get-expression-operator($expression);\r\n  $dimension: get-expression-dimension($expression, $operator);\r\n  $prefix: get-expression-prefix($operator);\r\n  $value: get-expression-value($expression, $operator);\r\n\r\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\r\n}\r\n\r\n///\r\n/// Slice `$list` between `$start` and `$end` indexes\r\n///\r\n/// @access private\r\n///\r\n/// @param {List} $list - List to slice\r\n/// @param {Number} $start [1] - Start index\r\n/// @param {Number} $end [length($list)] - End index\r\n///\r\n/// @return {List} Sliced list\r\n///\r\n@function slice($list, $start: 1, $end: length($list)) {\r\n  @if length($list) < 1 or $start > $end {\r\n    @return ();\r\n  }\r\n\r\n  $result: ();\r\n\r\n  @for $i from $start through $end {\r\n    $result: append($result, nth($list, $i));\r\n  }\r\n\r\n  @return $result;\r\n}\r\n\r\n////\r\n/// String to number converter\r\n/// @author Kitty Giraudel\r\n/// @access private\r\n////\r\n\r\n\r\n///\r\n/// Casts a string into a number\r\n///\r\n/// @param {String | Number} $value - Value to be parsed\r\n///\r\n/// @return {Number}\r\n///\r\n@function to-number($value) {\r\n  @if type-of($value) == 'number' {\r\n    @return $value;\r\n  } @else if type-of($value) != 'string' {\r\n    $_: im-log('Value for `to-number` should be a number or a string.');\r\n  }\r\n\r\n  $first-character: str-slice($value, 1, 1);\r\n  $result: 0;\r\n  $digits: 0;\r\n  $minus: ($first-character == '-');\r\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\r\n\r\n  // Remove +/- sign if present at first character\r\n  @if ($first-character == '+' or $first-character == '-') {\r\n    $value: str-slice($value, 2);\r\n  }\r\n\r\n  @for $i from 1 through str-length($value) {\r\n    $character: str-slice($value, $i, $i);\r\n\r\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\r\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\r\n    }\r\n\r\n    @if $character == '.' {\r\n      $digits: 1;\r\n    } @else if $digits == 0 {\r\n      $result: $result * 10 + map-get($numbers, $character);\r\n    } @else {\r\n      $digits: $digits * 10;\r\n      $result: $result + map-get($numbers, $character) / $digits;\r\n    }\r\n  }\r\n\r\n  @return if($minus, -$result, $result);\r\n}\r\n\r\n\r\n///\r\n/// Add `$unit` to `$value`\r\n///\r\n/// @param {Number} $value - Value to add unit to\r\n/// @param {String} $unit - String representation of the unit\r\n///\r\n/// @return {Number} - `$value` expressed in `$unit`\r\n///\r\n@function to-length($value, $unit) {\r\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\r\n\r\n  @if not index(map-keys($units), $unit) {\r\n    $_: im-log('Invalid unit `#{$unit}`.');\r\n  }\r\n\r\n  @return $value * map-get($units, $unit);\r\n}\r\n\r\n///\r\n/// This mixin aims at redefining the configuration just for the scope of\r\n/// the call. It is helpful when having a component needing an extended\r\n/// configuration such as custom breakpoints (referred to as tweakpoints)\r\n/// for instance.\r\n///\r\n/// @author Kitty Giraudel\r\n///\r\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\r\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\r\n///\r\n/// @example scss - Extend the global breakpoints with a tweakpoint\r\n///  @include media-context(('custom': 678px)) {\r\n///    .foo {\r\n///      @include media('>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend the global media expressions with a custom one\r\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n/// @example scss - Extend both configuration maps\r\n///  @include media-context(('custom': 678px), ('all': 'all')) {\r\n///    .foo {\r\n///      @include media('all', '>phone', '<=custom') {\r\n///       // ...\r\n///      }\r\n///    }\r\n///  }\r\n///\r\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\r\n  // Save global configuration\r\n  $global-breakpoints: $breakpoints;\r\n  $global-media-expressions: $media-expressions;\r\n\r\n  // Update global configuration\r\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\r\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\r\n\r\n  @content;\r\n\r\n  // Restore global configuration\r\n  $breakpoints: $global-breakpoints !global;\r\n  $media-expressions: $global-media-expressions !global;\r\n}\r\n\r\n////\r\n/// include-media public exposed API\r\n/// @author Eduardo Boucas\r\n/// @access public\r\n////\r\n\r\n\r\n///\r\n/// Generates a media query based on a list of conditions\r\n///\r\n/// @param {Arglist}   $conditions  - Media query conditions\r\n///\r\n/// @example scss - With a single set breakpoint\r\n///  @include media('>phone') { }\r\n///\r\n/// @example scss - With two set breakpoints\r\n///  @include media('>phone', '<=tablet') { }\r\n///\r\n/// @example scss - With custom values\r\n///  @include media('>=358px', '<850px') { }\r\n///\r\n/// @example scss - With set breakpoints with custom values\r\n///  @include media('>desktop', '<=1350px') { }\r\n///\r\n/// @example scss - With a static expression\r\n///  @include media('retina2x') { }\r\n///\r\n/// @example scss - Mixing everything\r\n///  @include media('>=350px', '<tablet', 'retina3x') { }\r\n///\r\n@mixin media($conditions...) {\r\n  @if ($im-media-support and length($conditions) == 0) or\r\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\r\n    @content;\r\n  } @else if ($im-media-support and length($conditions) > 0) {\r\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\r\n      // Recursive call\r\n      @include media(slice($conditions, 2)...) {\r\n        @content;\r\n      }\r\n    }\r\n  }\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n#placeholder-nav{\r\n    width:100%;\r\n    height:120px;\r\n}\r\n\r\n.infoContainer{\r\n    margin: $marginMedium;\r\n    font-family: Oswald;\r\n    color:$personalNameFontColor;\r\n    display:flex;\r\n    flex-direction: column;\r\n    font-size:$navigationFontSize;\r\n}","@import \"/src/scss/constants.scss\";\r\n@import \"/src/scss/config.scss\";\r\n\r\n.projectPageHeader {\r\n  font-size: 64px;\r\n  font-family: \"Oswald\";\r\n  text-transform: uppercase;\r\n  font-weight: 600;\r\n  color: $personalNameFontColor;\r\n  margin-left: $marginMedium;\r\n}\r\n.projectPageInformationContainer {\r\n  width: 80%;\r\n  font-size: 20px;\r\n  font-family: \"Oswald\";\r\n  font-weight: 300;\r\n  margin-top:$marginLarge;\r\n  margin-left: $marginMedium;\r\n}\r\n\r\n.projectPagePlaceholder{\r\n  width:100%;\r\n  height:120px;\r\n}\r\n\r\n.projectPageImageContainer{\r\n  margin-top:$marginLarge;\r\n  width:100%;\r\n  display:flex;\r\n  justify-content: center;\r\n  flex-direction: column;\r\n  align-items:center;\r\n}\r\n\r\n.projectPageImage{\r\n  width:430px;\r\n  margin-bottom:$marginLarge;\r\n}\r\n\r\n@include media('>=tablet', '<=desktop'){\r\n  .projectPageImage{\r\n    width:750px;\r\n  }\r\n  .projectPageInformationContainer{\r\n    font-size:24px;\r\n    width:70%;\r\n  }\r\n}\r\n\r\n@include media('>=desktop', '<=desktopLarge'){\r\n  .projectPageImage{\r\n    width:950px;\r\n  }\r\n  .projectPageInformationContainer{\r\n    font-size:28px;\r\n    width:60%;\r\n  }\r\n}\r\n\r\n@include media('>=desktopLarge'){\r\n  .projectPageImage{\r\n    width:1400px;\r\n  }\r\n  .projectPageInformationContainer{\r\n    font-size:30px;\r\n    width:60%;\r\n  }\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.panelBlueLine{\r\n    border: none;\r\n    background-color:#b7d7fb;\r\n    height:2px;\r\n    width: 99%;\r\n    margin:0;\r\n   margin-bottom:$marginTiny;\r\n}\r\n.projectPanelContainer{\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:$projectPanelWidth;\r\n    float: right;\r\n    margin-right:$marginMedium;\r\n    height:$projectPanelHeight;\r\n    background: linear-gradient(to bottom, #B7D7FB 50%, $primaryBackgroundColor 50%);\r\n    transition: all .5s ease-out;\r\n    background-position: bottom left;\r\n    background-size: 100% 200%;\r\n    margin-bottom: $marginSmall;\r\n    cursor:pointer;\r\n}\r\n.projectPanelContainer:hover{\r\n    background-position:top left;\r\n}\r\n.projectPanelName{\r\n    font-family: Oswald;\r\n    font-size: $projectPanelNameFontSize;\r\n    color:#2E3141;\r\n    font-weight: 500;\r\n}\r\n\r\n.projectPanelDate{\r\n    display:flex;\r\n    flex-direction: column;\r\n    font-family: Oswald;\r\n    font-style: normal;\r\n    font-size:$projectPanelDateFontSize;\r\n    color:#2E3141;\r\n    font-weight:300;\r\n}\r\n\r\n.projectPanelInformationContainer{\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n}\r\n\r\n\r\n@include media('>=tablet', '<=desktop'){\r\n    .projectPanelContainer{\r\n        width:70%;\r\n        margin-left: 22%;\r\n        margin-right:$marginLarge;\r\n    }\r\n}\r\n\r\n@include media('>=desktop'){\r\n    .projectPanelContainer{\r\n        width:60%;\r\n        float:right;\r\n        margin-left:22%;\r\n    }\r\n}\r\n","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.projectPanelPageHeader{\r\n    font-family:'Bebas Neue';\r\n    font-size: $projectPanelPageHeader;\r\n    color:#2E3141;\r\n    margin-left: $marginMedium;\r\n    margin-bottom: $marginMedium;\r\n}\r\n\r\n@include media('>=tablet'){\r\n    .projectPanelPageContainer{\r\n        display:flex;\r\n        flex-direction:column;\r\n    }\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.skillBarContainer{\r\n    display:flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin-bottom: $marginMedium;\r\n}\r\n\r\n.skillName{\r\n    font-family:Oswald;\r\n    font-weight: 300;\r\n    font-size:$skillNameFontSize;\r\n    color:$skillPageFont;\r\n    line-height: 23.71px;\r\n    margin-left:$marginSmall;\r\n}\r\n.skillBar{\r\n    width: 200px;\r\n    height:12px;\r\n    border-radius:30px;\r\n    background: linear-gradient(to left, $skillPageFont 100%, $primaryBlue 0%);\r\n    margin-right:$marginSmall;\r\n}\r\n\r\n@include media('>=tablet'){\r\n    .skillName{\r\n        margin-left: 2%;\r\n        font-size:$skillNameFontSize *1.4\r\n    }\r\n    .skillBar{\r\n        margin-right:10%;\r\n    }\r\n}\r\n\r\n@include media('>=tablet', '<=desktop'){\r\n    .skillBar{\r\n        width:450px;\r\n    }\r\n}\r\n@include media('>=desktop', '<=desktopLarge'){\r\n    .skillBar{\r\n        width:650px;\r\n    }\r\n}\r\n\r\n@include media('>=desktopLarge', '<=desktopUltra'){\r\n    .skillBar{\r\n        width:1000px;\r\n    }\r\n}\r\n@include media('>=desktopUltra'){\r\n    .skillBar{\r\n        width:1400px;\r\n    }\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n.skillPageContainer{\r\n    width:100%;\r\n    background-color:$personalNameFontColor;\r\n    box-shadow: 10px 4px 20px 10px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.skillPageHeader{\r\n    font-size:$projectPanelPageHeader;\r\n    color:$skillPageFont;\r\n    margin-left:2%;\r\n    font-family: 'Bebas Neue';\r\n    margin-top:$marginMedium;\r\n    margin-bottom: $marginMedium;\r\n}\r\n\r\n"],"names":[],"sourceRoot":""}