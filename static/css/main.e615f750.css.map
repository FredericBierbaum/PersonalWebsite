{"version":3,"file":"static/css/main.e615f750.css","mappings":"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","sources":["index.scss","scss/constants.scss","App.scss","components/AboutMePage/aboutMePage.scss","components/LandingPage/Navigation/navigation.scss","components/LandingPage/PortraitWithText/portraitWithText.scss","scss/config.scss","components/ProjectPanelPage/ProjectPanel/projectPanel.scss","components/ProjectPanelPage/projectPanelPage.scss","components/SkillPage/SkillBar/skillBar.scss","components/SkillPage/skillPage.scss"],"sourcesContent":["@import './scss/constants.scss';\r\n\r\nbody {\r\n  margin: 0;\r\n  font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', 'Roboto', 'Oxygen',\r\n    'Ubuntu', 'Cantarell', 'Fira Sans', 'Droid Sans', 'Helvetica Neue',\r\n    sans-serif;\r\n  -webkit-font-smoothing: antialiased;\r\n  -moz-osx-font-smoothing: grayscale;\r\n  background: $primaryBackgroundColor;\r\n}\r\n\r\ncode {\r\n  font-family: source-code-pro, Menlo, Monaco, Consolas, 'Courier New',\r\n    monospace;\r\n}\r\n","\r\n\r\n//Margins\r\n$marginTiny:10px;\r\n$marginSmall: 20px;\r\n$marginMedium: 40px;\r\n$marginLarge: 60px;\r\n//Padding\r\n$paddingSmall:20px;\r\n$paddingMedium:40px;\r\n$paddingLarge:60px;\r\n//Font Sizes\r\n$navigationFontSize:12px;\r\n$skillNameFontSize:20px;\r\n$projectPanelNameFontSize:20px;\r\n$personalNameFontSize:87px;\r\n$personalNameWebFirstFontSize:52px;\r\n$personalNameWebSecondFontSize:74px;\r\n$projectPanelPageHeader:64px;\r\n$projectPanelDateFontSize:16px;\r\n$aboutMePageHeader:64px;\r\n//Widths\r\n$burgerMenuIconWidth: 32px;\r\n$projectPanelWidth:269px;\r\n$aboutMePageContentWidth:241px;\r\n//Heights+\r\n$projectPanelHeight:130px;\r\n//Colors\r\n$primaryBlue:#8CC2FF;\r\n$primaryBackgroundColor: #F5F4FF;\r\n$personalNameFontColor: #2E3141;\r\n$personalNameWebFontColor:#384964;\r\n$skillPageFont:#F4F3FF;\r\n//LineHeight\r\n$portraitWithTextLineHeight:70px;\r\n$portraitWithTextWebLineHeight:40px;\r\n",".appContainer{\r\n    display:flex;\r\n    flex-direction: column;\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.aboutMePageHeader{\r\n    font-family:'Bebas Neue';\r\n    color:#2E3141;\r\n    font-size:$aboutMePageHeader;\r\n    margin-left:$marginMedium;\r\n    margin-bottom:$marginSmall;\r\n}\r\n\r\n.aboutMePageContent{\r\n    font-family: 'Oswald', sans-serif;\r\n    font-weight: 300;\r\n    margin-left:$marginMedium;\r\n    margin-right:$marginLarge;\r\n    width:$aboutMePageContentWidth;\r\n}\r\n\r\n#profilePictureSecond{\r\n    position:relative;\r\n    top: 4px;\r\n    left:0px;\r\n    width:400px;\r\n}\r\n\r\n@include media('>=tablet'){\r\n   .aboutMePageContent{\r\n    width:$aboutMePageContentWidth * 2.7;\r\n   }\r\n   .aboutMePageContentAndPictureContainer{\r\n    display:flex;\r\n    flex-direction: row;\r\n}\r\n   #profilePictureSecond{\r\n    left:-6%;\r\n    top:-0px;\r\n    margin:0;\r\n    padding:0;\r\n   }\r\n}\r\n\r\n","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.navigationContainer{\r\n    display:flex;\r\n    justify-content:space-between;\r\n    margin: $marginMedium;\r\n    font-family: Oswald;\r\n}\r\n#burger-icon{\r\n    width: $burgerMenuIconWidth;\r\n}\r\n.leftNavSide{\r\n    display:flex;\r\n    flex-direction: column;\r\n    font-size:$navigationFontSize;\r\n}\r\n.navigation{\r\n    display:none;\r\n}\r\n\r\n@include media('>=tablet'){\r\n    #burger-icon{\r\n        display:none;\r\n    }\r\n    .navigation{\r\n        display:flex;\r\n        width:30%;\r\n        justify-content:space-around;\r\n    }\r\n    .navigationContainer{\r\n        margin-bottom: $marginLarge;\r\n    }\r\n}","@import '/src/scss/constants.scss';\r\n@import'/src/scss/config.scss';\r\n\r\n\r\n.portraitWithTextContainer{\r\n    font-family:'Bebas Neue';\r\n    height:580px;\r\n}\r\n.personalNameContainer{\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center; \r\n    width:100%;\r\n    font-size: $personalNameFontSize;\r\n    color: $personalNameFontColor;\r\n    span{\r\n        line-height: $portraitWithTextLineHeight;\r\n        text-align: left;\r\n    }\r\n    .personalNameFirst{\r\n        margin-right:$marginSmall;\r\n    }\r\n}\r\n.personalNameWebContainer{\r\n    color:$personalNameWebFontColor;\r\n    display:flex;\r\n    flex-direction:column;\r\n    align-items:center;\r\n    margin-right: $marginSmall;\r\n    margin-top:$marginSmall;\r\n    span{\r\n        line-height: $portraitWithTextLineHeight;\r\n    }\r\n    .personalNameWebFirst{\r\n        font-size:$personalNameWebFirstFontSize;\r\n        text-align:left;\r\n        line-height:$portraitWithTextWebLineHeight;\r\n    }\r\n    .personalNameWebSecond{\r\n        text-align:left;\r\n        font-size:$personalNameWebSecondFontSize;\r\n    }\r\n}\r\n\r\n#profilePictureOne{\r\n    position:relative;\r\n    top:-100px;\r\n    width:370px;\r\n}\r\n\r\n\r\n@include media('>=tablet','<=desktop'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *1.4;\r\n    }\r\n    #profilePictureOne{\r\n        top:-346px;\r\n    }\r\n\r\n}\r\n@include media('>=tablet'){\r\n    #profilePictureOne{\r\n        width:510px;\r\n    }\r\n    .personalNameContainer{\r\n        flex-direction:row;\r\n        font-size:$personalNameFontSize *1.2;\r\n    }\r\n    .personalNameWebFirst{\r\n        font-size:$personalNameWebFirstFontSize * 1.8 !important;\r\n    }\r\n    .personalNameWebSecond{\r\n        font-size:$personalNameWebSecondFontSize * 1.8 !important;\r\n    }\r\n    .personalNameWebContainer{\r\n        float:right;\r\n        margin-right:$marginLarge;\r\n        margin-top:$marginMedium;\r\n        span{\r\n            line-height:$portraitWithTextWebLineHeight*3.8;\r\n        }\r\n    }\r\n}\r\n\r\n\r\n@include media('>=desktop', '<=desktopLarge'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *2.4;\r\n    }\r\n    #profilePictureOne{\r\n        position:absolute;\r\n        top:100px;\r\n    }\r\n\r\n    .personalNameWebContainer{\r\n        position:relative;\r\n        left:-22%;\r\n    }\r\n}\r\n@include media('>=desktopLarge', '<=desktopUltra'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *2.4;\r\n    }\r\n    #profilePictureOne{\r\n        position:absolute;\r\n        top:100px;\r\n    }\r\n\r\n    .personalNameWebContainer{\r\n        position:relative;\r\n        left:-40%;\r\n    }\r\n}\r\n@include media('>=desktopUltra'){\r\n    .personalNameContainer{\r\n        margin-left:$marginLarge *2.4;\r\n        font-size:$personalNameFontSize * 1.4;\r\n    }\r\n    #profilePictureOne{\r\n        position:absolute;\r\n        top:100px;\r\n    }\r\n\r\n    .personalNameWebContainer{\r\n        position:relative;\r\n        left:-50%;\r\n        margin-top:$marginLarge *1.0 !important ;\r\n        span{\r\n            line-height:$portraitWithTextWebLineHeight*4.3;\r\n        }\r\n    }\r\n    .personalNameWebFirst{\r\n        font-size:$personalNameWebFirstFontSize * 2.2 !important;\r\n    }\r\n    .personalNameWebSecond{\r\n        font-size:$personalNameWebSecondFontSize * 2.2 !important;\r\n    }\r\n    \r\n}\r\n","@charset \"UTF-8\";\n\n//     _            _           _                           _ _\n//    (_)          | |         | |                         | (_)\n//     _ _ __   ___| |_   _  __| | ___   _ __ ___   ___  __| |_  __ _\n//    | | '_ \\ / __| | | | |/ _` |/ _ \\ | '_ ` _ \\ / _ \\/ _` | |/ _` |\n//    | | | | | (__| | |_| | (_| |  __/ | | | | | |  __/ (_| | | (_| |\n//    |_|_| |_|\\___|_|\\__,_|\\__,_|\\___| |_| |_| |_|\\___|\\__,_|_|\\__,_|\n//\n//      Simple, elegant and maintainable media queries in Sass\n//                        v1.4.9\n//\n//        https://eduardoboucas.github.io/include-media\n//\n//         Authors: Eduardo Boucas (@eduardoboucas)\n//                  Kitty Giraudel (@kittygiraudel)\n//\n//      This project is licensed under the terms of the MIT license\n////\n/// include-media library public configuration\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Creates a list of global breakpoints\n///\n/// @example scss - Creates a single breakpoint with the label `phone`\n///  $breakpoints: ('phone': 320px);\n///\n$breakpoints: (\n  'phone': 320px,\n  'tablet': 768px,\n  'desktop': 1024px,\n  'desktopLarge': 1440px,\n  'desktopUltra':1920px\n) !default;\n\n\n///\n/// Creates a list of static expressions or media types\n///\n/// @example scss - Creates a single media type (screen)\n///  $media-expressions: ('screen': 'screen');\n///\n/// @example scss - Creates a static expression with logical disjunction (OR operator)\n///  $media-expressions: (\n///    'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi)'\n///  );\n///\n$media-expressions: (\n  'screen': 'screen',\n  'print': 'print',\n  'handheld': 'handheld',\n  'landscape': '(orientation: landscape)',\n  'portrait': '(orientation: portrait)',\n  'retina2x': '(-webkit-min-device-pixel-ratio: 2), (min-resolution: 192dpi), (min-resolution: 2dppx)',\n  'retina3x': '(-webkit-min-device-pixel-ratio: 3), (min-resolution: 350dpi), (min-resolution: 3dppx)'\n) !default;\n\n\n///\n/// Defines a number to be added or subtracted from each unit when declaring breakpoints with exclusive intervals\n///\n/// @example scss - Interval for pixels is defined as `1` by default\n///  @include media('>128px') {}\n///\n///  /* Generates: */\n///  @media (min-width: 129px) {}\n///\n/// @example scss - Interval for ems is defined as `0.01` by default\n///  @include media('>20em') {}\n///\n///  /* Generates: */\n///  @media (min-width: 20.01em) {}\n///\n/// @example scss - Interval for rems is defined as `0.1` by default, to be used with `font-size: 62.5%;`\n///  @include media('>2.0rem') {}\n///\n///  /* Generates: */\n///  @media (min-width: 2.1rem) {}\n///\n$unit-intervals: (\n  'px': 1,\n  'em': 0.01,\n  'rem': 0.1,\n  '': 0\n) !default;\n\n///\n/// Defines whether support for media queries is available, useful for creating separate stylesheets\n/// for browsers that don't support media queries.\n///\n/// @example scss - Disables support for media queries\n///  $im-media-support: false;\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n$im-media-support: true !default;\n\n///\n/// Selects which breakpoint to emulate when support for media queries is disabled. Media queries that start at or\n/// intercept the breakpoint will be displayed, any others will be ignored.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  @include media('>=tablet') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* Generates: */\n///  .foo {\n///    color: tomato;\n///  }\n///\n/// @example scss - This media query will NOT show because it does not intercept the desktop breakpoint\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'tablet';\n///  @include media('>=desktop') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-breakpoint: 'desktop' !default;\n\n///\n/// Selects which media expressions are allowed in an expression for it to be used when media queries\n/// are not supported.\n///\n/// @example scss - This media query will show because it intercepts the static breakpoint and contains only accepted media expressions\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'screen') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///   /* Generates: */\n///   .foo {\n///     color: tomato;\n///   }\n///\n/// @example scss - This media query will NOT show because it intercepts the static breakpoint but contains a media expression that is not accepted\n///  $im-media-support: false;\n///  $im-no-media-breakpoint: 'desktop';\n///  $im-no-media-expressions: ('screen');\n///  @include media('>=tablet', 'retina2x') {\n///    .foo {\n///      color: tomato;\n///    }\n///  }\n///\n///  /* No output */\n///\n$im-no-media-expressions: ('screen', 'portrait', 'landscape') !default;\n\n////\n/// Cross-engine logging engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Log a message either with `@error` if supported\n/// else with `@warn`, using `feature-exists('at-error')`\n/// to detect support.\n///\n/// @param {String} $message - Message to log\n///\n@function im-log($message) {\n  @if feature-exists('at-error') {\n    @error $message;\n  } @else {\n    @warn $message;\n    $_: noop();\n  }\n\n  @return $message;\n}\n\n\n///\n/// Wrapper mixin for the log function so it can be used with a more friendly\n/// API than `@if im-log('..') {}` or `$_: im-log('..')`. Basically, use the function\n/// within functions because it is not possible to include a mixin in a function\n/// and use the mixin everywhere else because it's much more elegant.\n///\n/// @param {String} $message - Message to log\n///\n@mixin log($message) {\n  @if im-log($message) {}\n}\n\n\n///\n/// Function with no `@return` called next to `@warn` in Sass 3.3\n/// to trigger a compiling error and stop the process.\n///\n@function noop() {}\n\n///\n/// Determines whether a list of conditions is intercepted by the static breakpoint.\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @return {Boolean} - Returns true if the conditions are intercepted by the static breakpoint\n///\n@function im-intercepts-static-breakpoint($conditions...) {\n  $no-media-breakpoint-value: map-get($breakpoints, $im-no-media-breakpoint);\n\n  @if not $no-media-breakpoint-value {\n    @if im-log('`#{$im-no-media-breakpoint}` is not a valid breakpoint.') {}\n  }\n\n  @each $condition in $conditions {\n    @if not map-has-key($media-expressions, $condition) {\n      $operator: get-expression-operator($condition);\n      $prefix: get-expression-prefix($operator);\n      $value: get-expression-value($condition, $operator);\n\n      @if ($prefix == 'max' and $value <= $no-media-breakpoint-value) or\n          ($prefix == 'min' and $value > $no-media-breakpoint-value) {\n        @return false;\n      }\n    } @else if not index($im-no-media-expressions, $condition) {\n      @return false;\n    }\n  }\n\n  @return true;\n}\n\n////\n/// Parsing engine\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Get operator of an expression\n///\n/// @param {String} $expression - Expression to extract operator from\n///\n/// @return {String} - Any of `>=`, `>`, `<=`, `<`, `≥`, `≤`\n///\n@function get-expression-operator($expression) {\n  @each $operator in ('>=', '>', '<=', '<', '≥', '≤') {\n    @if str-index($expression, $operator) {\n      @return $operator;\n    }\n  }\n\n  // It is not possible to include a mixin inside a function, so we have to\n  // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n  // functions cannot be called anywhere in Sass, we need to hack the call in\n  // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n  // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n  $_: im-log('No operator found in `#{$expression}`.');\n}\n\n\n///\n/// Get dimension of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract dimension from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {String} - `width` or `height` (or potentially anything else)\n///\n@function get-expression-dimension($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $parsed-dimension: str-slice($expression, 0, $operator-index - 1);\n  $dimension: 'width';\n\n  @if str-length($parsed-dimension) > 0 {\n    $dimension: $parsed-dimension;\n  }\n\n  @return $dimension;\n}\n\n\n///\n/// Get dimension prefix based on an operator\n///\n/// @param {String} $operator - Operator\n///\n/// @return {String} - `min` or `max`\n///\n@function get-expression-prefix($operator) {\n  @return if(index(('<', '<=', '≤'), $operator), 'max', 'min');\n}\n\n\n///\n/// Get value of an expression, based on a found operator\n///\n/// @param {String} $expression - Expression to extract value from\n/// @param {String} $operator - Operator from `$expression`\n///\n/// @return {Number} - A numeric value\n///\n@function get-expression-value($expression, $operator) {\n  $operator-index: str-index($expression, $operator);\n  $value: str-slice($expression, $operator-index + str-length($operator));\n\n  @if map-has-key($breakpoints, $value) {\n    $value: map-get($breakpoints, $value);\n  } @else {\n    $value: to-number($value);\n  }\n\n  $interval: map-get($unit-intervals, unit($value));\n\n  @if not $interval {\n    // It is not possible to include a mixin inside a function, so we have to\n    // rely on the `im-log(..)` function rather than the `log(..)` mixin. Because\n    // functions cannot be called anywhere in Sass, we need to hack the call in\n    // a dummy variable, such as `$_`. If anybody ever raise a scoping issue with\n    // Sass 3.3, change this line in `@if im-log(..) {}` instead.\n    $_: im-log('Unknown unit `#{unit($value)}`.');\n  }\n\n  @if $operator == '>' {\n    $value: $value + $interval;\n  } @else if $operator == '<' {\n    $value: $value - $interval;\n  }\n\n  @return $value;\n}\n\n\n///\n/// Parse an expression to return a valid media-query expression\n///\n/// @param {String} $expression - Expression to parse\n///\n/// @return {String} - Valid media query\n///\n@function parse-expression($expression) {\n  // If it is part of $media-expressions, it has no operator\n  // then there is no need to go any further, just return the value\n  @if map-has-key($media-expressions, $expression) {\n    @return map-get($media-expressions, $expression);\n  }\n\n  $operator: get-expression-operator($expression);\n  $dimension: get-expression-dimension($expression, $operator);\n  $prefix: get-expression-prefix($operator);\n  $value: get-expression-value($expression, $operator);\n\n  @return '(#{$prefix}-#{$dimension}: #{$value})';\n}\n\n///\n/// Slice `$list` between `$start` and `$end` indexes\n///\n/// @access private\n///\n/// @param {List} $list - List to slice\n/// @param {Number} $start [1] - Start index\n/// @param {Number} $end [length($list)] - End index\n///\n/// @return {List} Sliced list\n///\n@function slice($list, $start: 1, $end: length($list)) {\n  @if length($list) < 1 or $start > $end {\n    @return ();\n  }\n\n  $result: ();\n\n  @for $i from $start through $end {\n    $result: append($result, nth($list, $i));\n  }\n\n  @return $result;\n}\n\n////\n/// String to number converter\n/// @author Kitty Giraudel\n/// @access private\n////\n\n\n///\n/// Casts a string into a number\n///\n/// @param {String | Number} $value - Value to be parsed\n///\n/// @return {Number}\n///\n@function to-number($value) {\n  @if type-of($value) == 'number' {\n    @return $value;\n  } @else if type-of($value) != 'string' {\n    $_: im-log('Value for `to-number` should be a number or a string.');\n  }\n\n  $first-character: str-slice($value, 1, 1);\n  $result: 0;\n  $digits: 0;\n  $minus: ($first-character == '-');\n  $numbers: ('0': 0, '1': 1, '2': 2, '3': 3, '4': 4, '5': 5, '6': 6, '7': 7, '8': 8, '9': 9);\n\n  // Remove +/- sign if present at first character\n  @if ($first-character == '+' or $first-character == '-') {\n    $value: str-slice($value, 2);\n  }\n\n  @for $i from 1 through str-length($value) {\n    $character: str-slice($value, $i, $i);\n\n    @if not (index(map-keys($numbers), $character) or $character == '.') {\n      @return to-length(if($minus, -$result, $result), str-slice($value, $i))\n    }\n\n    @if $character == '.' {\n      $digits: 1;\n    } @else if $digits == 0 {\n      $result: $result * 10 + map-get($numbers, $character);\n    } @else {\n      $digits: $digits * 10;\n      $result: $result + map-get($numbers, $character) / $digits;\n    }\n  }\n\n  @return if($minus, -$result, $result);\n}\n\n\n///\n/// Add `$unit` to `$value`\n///\n/// @param {Number} $value - Value to add unit to\n/// @param {String} $unit - String representation of the unit\n///\n/// @return {Number} - `$value` expressed in `$unit`\n///\n@function to-length($value, $unit) {\n  $units: ('px': 1px, 'cm': 1cm, 'mm': 1mm, '%': 1%, 'ch': 1ch, 'pc': 1pc, 'in': 1in, 'em': 1em, 'rem': 1rem, 'pt': 1pt, 'ex': 1ex, 'vw': 1vw, 'vh': 1vh, 'vmin': 1vmin, 'vmax': 1vmax);\n\n  @if not index(map-keys($units), $unit) {\n    $_: im-log('Invalid unit `#{$unit}`.');\n  }\n\n  @return $value * map-get($units, $unit);\n}\n\n///\n/// This mixin aims at redefining the configuration just for the scope of\n/// the call. It is helpful when having a component needing an extended\n/// configuration such as custom breakpoints (referred to as tweakpoints)\n/// for instance.\n///\n/// @author Kitty Giraudel\n///\n/// @param {Map} $tweakpoints [()] - Map of tweakpoints to be merged with `$breakpoints`\n/// @param {Map} $tweak-media-expressions [()] - Map of tweaked media expressions to be merged with `$media-expression`\n///\n/// @example scss - Extend the global breakpoints with a tweakpoint\n///  @include media-context(('custom': 678px)) {\n///    .foo {\n///      @include media('>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend the global media expressions with a custom one\n///  @include media-context($tweak-media-expressions: ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone') {\n///       // ...\n///      }\n///    }\n///  }\n///\n/// @example scss - Extend both configuration maps\n///  @include media-context(('custom': 678px), ('all': 'all')) {\n///    .foo {\n///      @include media('all', '>phone', '<=custom') {\n///       // ...\n///      }\n///    }\n///  }\n///\n@mixin media-context($tweakpoints: (), $tweak-media-expressions: ()) {\n  // Save global configuration\n  $global-breakpoints: $breakpoints;\n  $global-media-expressions: $media-expressions;\n\n  // Update global configuration\n  $breakpoints: map-merge($breakpoints, $tweakpoints) !global;\n  $media-expressions: map-merge($media-expressions, $tweak-media-expressions) !global;\n\n  @content;\n\n  // Restore global configuration\n  $breakpoints: $global-breakpoints !global;\n  $media-expressions: $global-media-expressions !global;\n}\n\n////\n/// include-media public exposed API\n/// @author Eduardo Boucas\n/// @access public\n////\n\n\n///\n/// Generates a media query based on a list of conditions\n///\n/// @param {Arglist}   $conditions  - Media query conditions\n///\n/// @example scss - With a single set breakpoint\n///  @include media('>phone') { }\n///\n/// @example scss - With two set breakpoints\n///  @include media('>phone', '<=tablet') { }\n///\n/// @example scss - With custom values\n///  @include media('>=358px', '<850px') { }\n///\n/// @example scss - With set breakpoints with custom values\n///  @include media('>desktop', '<=1350px') { }\n///\n/// @example scss - With a static expression\n///  @include media('retina2x') { }\n///\n/// @example scss - Mixing everything\n///  @include media('>=350px', '<tablet', 'retina3x') { }\n///\n@mixin media($conditions...) {\n  @if ($im-media-support and length($conditions) == 0) or\n      (not $im-media-support and im-intercepts-static-breakpoint($conditions...)) {\n    @content;\n  } @else if ($im-media-support and length($conditions) > 0) {\n    @media #{unquote(parse-expression(nth($conditions, 1)))} {\n      // Recursive call\n      @include media(slice($conditions, 2)...) {\n        @content;\n      }\n    }\n  }\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.panelBlueLine{\r\n    border: 1px solid #B7D7FB;\r\n    width: 99%;\r\n    margin:0;\r\n   margin-bottom:$marginTiny;\r\n}\r\n.projectPanelContainer{\r\n    display:flex;\r\n    flex-direction:column;\r\n    width:$projectPanelWidth;\r\n    float: right;\r\n    margin-right:$marginMedium;\r\n    height:$projectPanelHeight;\r\n    background: linear-gradient(to bottom, #B7D7FB 50%, $primaryBackgroundColor 50%);\r\n    transition: all .5s ease-out;\r\n    background-position: bottom left;\r\n    background-size: 100% 200%;\r\n    margin-bottom: $marginSmall;\r\n}\r\n.projectPanelContainer:hover{\r\n    background-position:top left;\r\n}\r\n.projectPanelName{\r\n    font-family: Oswald;\r\n    font-size: $projectPanelNameFontSize;\r\n    color:#2E3141;\r\n    font-weight: 500;\r\n}\r\n\r\n.projectPanelDate{\r\n    display:flex;\r\n    flex-direction: column;\r\n    font-family: Oswald;\r\n    font-style: normal;\r\n    font-size:$projectPanelDateFontSize;\r\n    color:#2E3141;\r\n    font-weight:300;\r\n}\r\n\r\n.projectPanelInformationContainer{\r\n    display:flex;\r\n    justify-content: space-between;\r\n    align-items: flex-start;\r\n}\r\n\r\n\r\n@include media('>=tablet', '<=desktop'){\r\n    .projectPanelContainer{\r\n        width:70%;\r\n        margin-left: 22%;\r\n        margin-right:$marginLarge;\r\n    }\r\n}\r\n\r\n@include media('>=desktop'){\r\n    .projectPanelContainer{\r\n        width:60%;\r\n        float:right;\r\n        margin-left:22%;\r\n    }\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.projectPanelPageHeader{\r\n    font-family:'Bebas Neue';\r\n    font-size: $projectPanelPageHeader;\r\n    color:#2E3141;\r\n    margin-left: $marginMedium;\r\n    margin-bottom: $marginMedium;\r\n}\r\n\r\n@include media('>=tablet'){\r\n    .projectPanelPageContainer{\r\n        display:flex;\r\n        flex-direction:column;\r\n    }\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n\r\n.skillBarContainer{\r\n    display:flex;\r\n    flex-direction: row;\r\n    justify-content: space-between;\r\n    margin-bottom: $marginSmall;\r\n}\r\n\r\n.skillName{\r\n    font-family:Oswald;\r\n    font-weight: 300;\r\n    font-size:$skillNameFontSize;\r\n    color:$skillPageFont;\r\n    line-height: 23.71px;\r\n    margin-left:$marginSmall;\r\n}\r\n.skillBar{\r\n    width: 200px;\r\n    height:12px;\r\n    border-radius:30px;\r\n    background: linear-gradient(to left, $skillPageFont 100%, $primaryBlue 0%);\r\n    margin-right:$marginSmall;\r\n}\r\n\r\n@include media('>=tablet','<desktop'){\r\n    .skillName{\r\n        margin-left: 20%;\r\n        font-size:$skillNameFontSize *1.4\r\n    }\r\n    .skillBar{\r\n        width:400px;\r\n        margin-right:10%;\r\n    }\r\n}","@import '/src/scss/constants.scss';\r\n@import '/src/scss/config.scss';\r\n.skillPageContainer{\r\n    width:100%;\r\n    background-color:$personalNameFontColor;\r\n    box-shadow: 10px 4px 20px 10px rgba(0, 0, 0, 0.25);\r\n}\r\n\r\n.skillPageHeader{\r\n    font-size:$projectPanelPageHeader;\r\n    color:$skillPageFont;\r\n    margin-left:$marginMedium;\r\n    font-family: 'Bebas Neue';\r\n    margin-top:$marginMedium;\r\n    margin-bottom: $marginMedium;\r\n}\r\n\r\n"],"names":[],"sourceRoot":""}